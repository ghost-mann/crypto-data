{
  "name": "cassandra-sink-connector",
  "config": {
    "connector.class": "com.datastax.oss.kafka.sink.CassandraSinkConnector",
    "tasks.max": "1",
    "topics": "binance.public.latest_prices,binance.public.recent_trades,binance.public.klines_15m,binance.public.stats_24h,binance.public.orderbook_bids,binance.public.orderbook_asks",

    "contactPoints": "cassandra",
    "port": "9042",
    "loadBalancing.localDc": "datacenter1",

    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": "false",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": "false",

    "errors.tolerance": "all",
    "errors.log.enable": "true",
    "errors.log.include.messages": "true",

    "maxConcurrentRequests": "500",
    "queryExecutionTimeoutMs": "30000",

    "topic.binance.public.latest_prices.binance.latest_prices.mapping": "symbol=value.after.symbol, price=value.after.price, fetched_at=value.after.fetched_at",
    "topic.binance.public.recent_trades.binance.recent_trades.mapping": "id=value.after.id, price=value.after.price, qty=value.after.qty, quoteqty=value.after.quoteQty, fetched_at=value.after.fetched_at, symbol=value.after.symbol, isbuyermaker=value.after.isBuyerMaker, isbestmatch=value.after.isBestMatch, time=value.after.time",
    "topic.binance.public.klines_15m.binance.klines_15m.mapping": "symbol=value.after.symbol, fetched_at=value.after.fetched_at, open_time=value.after.open_time, open=value.after.open, high=value.after.high, low=value.after.low, close=value.after.close, volume=value.after.volume",
    "topic.binance.public.stats_24h.binance.stats_24h.mapping": "symbol=value.after.symbol, pricechangepct=value.after.priceChangePercent, avg_price=value.after.weightedAvgPrice, volume=value.after.volume, fetched_at=value.after.fetched_at",
    "topic.binance.public.orderbook_bids.binance.orderbook_bids.mapping": "symbol=value.after.symbol, price=value.after.price, quantity=value.after.quantity, fetched_at=value.after.fetched_at",
    "topic.binance.public.orderbook_asks.binance.orderbook_asks.mapping": "symbol=value.after.symbol, price=value.after.price, quantity=value.after.quantity, fetched_at=value.after.fetched_at"
  }
}
